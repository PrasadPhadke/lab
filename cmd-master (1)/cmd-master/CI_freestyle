2. Install Required Plugins (if not already installed)
You'll need the Git and Maven plugins in Jenkins. Follow these steps to ensure they're installed:

 Create a New Freestyle Project

After creating the project, configure it to clone your GitHub repository and build it with Maven:
Source Code Management (Git Configuration):
Scroll down to the Source Code Management section.
Select Git.
In the Repository URL, paste your GitHub repository URL (e.g., https://github.com/<YourAccount>/<YourRepo>.git).
If the repository is private, add your credentials by clicking Add under Credentials.

Build Triggers:
Optionally, you can configure Jenkins to poll your GitHub repository for changes. This will allow Jenkins to build automatically when new commits are pushed.
Check Poll SCM and set a schedule. For example,
H/5 * * * * will poll the repository every 5 minutes.

-----------------------------------------------------------------------------------------------------------------
Build Step (Invoke Maven):

Scroll down to the Build section.
Click Add Build Step and choose Invoke top-level Maven targets.
In the Goals field, enter clean install. This will execute the Maven build lifecycle.
Ensure that the Maven Version is selected properly. If you haven't configured Maven in Jenkins yet, go to Manage Jenkins > Global Tool Configuration and set the path to your Maven installation.
5. Save the Configuration
After configuring your project, click Save to store the project settings.
6. Build the Project
After saving the configuration, youâ€™ll be redirected to the project dashboard.
Click Build Now (on the left-hand side) to manually trigger a build.
You should see a new build appear in the Build History.
7. Check the Console Output
Once the build is triggered, you can check the console output to see the build progress.
Click on the build number under Build History (e.g., #1).
Click Console Output to see the detailed log of the build process.
